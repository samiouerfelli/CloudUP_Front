{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TimeSlotService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.base_url;\n  }\n  getTimeSlots(professorId) {\n    return this.http.get(`${this.baseUrl}/getslots/${professorId}`);\n  }\n  // tslint:disable-next-line:typedef\n  addTimeSlot(professorId, slotData) {\n    // Note the use of backticks ` and ${} to embed the variable in the URL\n    return this.http.post(`${this.baseUrl}/addslots/${professorId}`, slotData);\n  }\n  getTimeSlotsForDay(professorId, day) {\n    return this.http.get(`${this.baseUrl}/getslots/${professorId}/${day}`);\n  }\n  // tslint:disable-next-line:typedef\n  deleteTimeSlot(slotId) {\n    return this.http.delete(`${this.baseUrl}/deleteTimeSlot/${slotId}`);\n  }\n  getAvailableTimeSlots(professorId) {\n    return this.http.get(`${this.baseUrl}/api/timeslots/${professorId}`);\n  }\n}\nTimeSlotService.ɵfac = function TimeSlotService_Factory(t) {\n  return new (t || TimeSlotService)(i0.ɵɵinject(i1.HttpClient));\n};\nTimeSlotService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TimeSlotService,\n  factory: TimeSlotService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAQA,WAAW,QAAO,gCAAgC;;;AAO1D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAGH,WAAW,CAACI,QAAQ;EAEE;EACxCC,YAAY,CAACC,WAAmB;IAC9B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACC,OAAO,aAAaF,WAAW,EAAE,CAAC;EAC7E;EAEA;EACAG,WAAW,CAACH,WAAmB,EAAEI,QAAa;IAC5C;IACA,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,aAAaF,WAAW,EAAE,EAAEI,QAAQ,CAAC;EAC5E;EAEAE,kBAAkB,CAACN,WAAmB,EAAEO,GAAW;IACjD,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACC,OAAO,aAAaF,WAAW,IAAIO,GAAG,EAAE,CAAC;EACpF;EAGA;EACAC,cAAc,CAACC,MAAc;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,mBAAmBO,MAAM,EAAE,CAAC;EACrE;EACAE,qBAAqB,CAACX,WAAmB;IACvC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACC,OAAO,kBAAkBF,WAAW,EAAE,CAAC;EAClF;;;mBAzBWL,eAAe;AAAA;;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["environment","TimeSlotService","constructor","http","base_url","getTimeSlots","professorId","get","baseUrl","addTimeSlot","slotData","post","getTimeSlotsForDay","day","deleteTimeSlot","slotId","delete","getAvailableTimeSlots","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Sami\\Desktop\\CloudUP_Front\\src\\app\\Services\\time-slot.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {TimeSlot} from '../models/TimeSlot.model';\nimport {Cours} from '../models/cours.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeSlotService {\n  private baseUrl = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  getTimeSlots(professorId: number): Observable<TimeSlot[]> {\n    return this.http.get<TimeSlot[]>(`${this.baseUrl}/getslots/${professorId}`);\n  }\n\n  // tslint:disable-next-line:typedef\n  addTimeSlot(professorId: number, slotData: any) {\n    // Note the use of backticks ` and ${} to embed the variable in the URL\n    return this.http.post(`${this.baseUrl}/addslots/${professorId}`, slotData);\n  }\n\n  getTimeSlotsForDay(professorId: number, day: string): Observable<TimeSlot[]> {\n    return this.http.get<TimeSlot[]>(`${this.baseUrl}/getslots/${professorId}/${day}`);\n  }\n\n\n  // tslint:disable-next-line:typedef\n  deleteTimeSlot(slotId: number) {\n    return this.http.delete(`${this.baseUrl}/deleteTimeSlot/${slotId}`);\n  }\n  getAvailableTimeSlots(professorId: number): Observable<TimeSlot[]> {\n    return this.http.get<TimeSlot[]>(`${this.baseUrl}/api/timeslots/${professorId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}