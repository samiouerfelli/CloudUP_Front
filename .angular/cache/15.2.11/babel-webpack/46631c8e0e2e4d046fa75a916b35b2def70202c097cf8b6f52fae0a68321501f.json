{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MyHttpService {\n  constructor(http) {\n    this.http = http;\n    this.token = '';\n  }\n  get(url) {\n    return this.http.get('http://localhost:8080' + url);\n  }\n  getPrivate(url) {\n    return this.http.get('http://localhost:8080' + url, {\n      headers: new HttpHeaders({\n        \"Authorization\": \"Bearer \" + this.token\n      })\n    });\n  }\n  getToken(code) {\n    return this.http.get('http://localhost:8080/auth/callback?code=' + code, {\n      observe: \"response\"\n    }).pipe(map(response => {\n      if (response.status === 200 && response.body !== null) {\n        this.token = response.body.token;\n        return true;\n      } else {\n        return false;\n      }\n    }));\n  }\n}\nMyHttpService.ɵfac = function MyHttpService_Factory(t) {\n  return new (t || MyHttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nMyHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyHttpService,\n  factory: MyHttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAsB,sBAAsB;AAE5E,SAASC,GAAG,QAAQ,gBAAgB;;;AAOpC,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,UAAK,GAAG,EAAE;EAE8B;EAExCC,GAAG,CAACC,GAAW;IACb,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAAC,uBAAuB,GAAGC,GAAG,CAAC;EACrD;EAEAC,UAAU,CAACD,GAAW;IACpB,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAAC,uBAAuB,GAAGC,GAAG,EAAE;MAACE,OAAO,EAAE,IAAIR,WAAW,CAAC;QAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACS;MAAK,CAAC;IAAC,CAAC,CAAC;EAC5H;EAEAC,QAAQ,CAACC,IAAY;IACnB,OAAO,IAAI,CAACP,IAAI,CAACC,GAAG,CAAQ,2CAA2C,GAAGM,IAAI,EAAE;MAACC,OAAO,EAAE;IAAU,CAAC,CAAC,CACnGC,IAAI,CAACZ,GAAG,CAAEa,QAA6B,IAAI;MAC1C,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,IAAID,QAAQ,CAACE,IAAI,KAAK,IAAI,EAAE;QACrD,IAAI,CAACP,KAAK,GAAGK,QAAQ,CAACE,IAAI,CAACP,KAAK;QAChC,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,KAAK;;IAEhB,CAAC,CAAC,CAAC;EACP;;;mBAxBWP,aAAa;AAAA;;SAAbA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["HttpHeaders","map","MyHttpService","constructor","http","get","url","getPrivate","headers","token","getToken","code","observe","pipe","response","status","body","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\yaasm\\IdeaProjects\\CloudUP_FrontTestYassmine\\src\\app\\my-http.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Token } from './Token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyHttpService {\r\n\r\n  token = '';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(url: string): any {\r\n    return this.http.get('http://localhost:8080' + url);\r\n  }\r\n\r\n  getPrivate(url: string): any {\r\n    return this.http.get('http://localhost:8080' + url, {headers: new HttpHeaders({\"Authorization\": \"Bearer \" + this.token})});\r\n  }\r\n\r\n  getToken(code: string): Observable<boolean> {\r\n    return this.http.get<Token>('http://localhost:8080/auth/callback?code=' + code, {observe: \"response\"})\r\n      .pipe(map((response: HttpResponse<Token>) => {\r\n        if (response.status === 200 && response.body !== null) {\r\n          this.token = response.body.token;\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}